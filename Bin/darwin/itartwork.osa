#!/usr/bin/osascript

-- Export downloaded iTunes artwork to a given folder
-- ./itartwork.osa /path/to/folder

-- Notes:
-- AppleScript doesn't have any way of printing to stdout, so there is no output from this program
-- until it completes, and then all output is printed at once.
--
-- To improve performance, only one image is exported for each album.

on run argv
	set linefeed to "\n"
	
	set usage to "Usage: itartwork.osa [--all | --single] PATH [ Track ID ]"
	
	if count of argv < 2 then return usage
	
	set mode to item 1 of argv
	set exportDir to item 2 of argv
	
	-- Add trailing slash if needed
	if exportDir does not end with "/" then
		set exportDir to exportDir & "/"
	end if
	
	set macPath to POSIX file exportDir as text
	
	if mode equal "--all" then
		return exportDownloadedArtwork(macPath)
	else if mode equal "--single" then
		if count of argv < 4 then return usage
		
		set searchString to item 3 of argv
		set pid to item 4 of argv
		return exportSingleArtwork(macPath, searchString, pid)
	else
		return usage
	end if
end run

on exportDownloadedArtwork(macPath)
	set output to ""
	set albumList to {}
	set linefeed to "\n"
	
	tell application "iTunes"
		set totalCount to count of every track in library playlist 1
		set trackCount to 1
		repeat while trackCount <= totalCount
			-- Avoid tracks of an album we already processed (matches on album name + artist name)
			set theAlbum to album of track trackCount of library playlist 1 as string
			set theAlbum to theAlbum & " - " & artist of track trackCount of library playlist 1 as string
			
			if albumList does not contain theAlbum then
				try
					set theArtwork to artwork 1 of track trackCount of library playlist 1
					if downloaded of theArtwork is true then
						set trackId to the (persistent ID of track trackCount)
						set theFormat to the (format of theArtwork) as text
						log "Exporting downloaded artwork for ID " & trackId & ": " & theAlbum
						set output to output & "Exporting downloaded artwork for ID " & trackId & ": " & theAlbum
						set thePic to the (raw data of theArtwork)
						set exportOutput to my exportArtwork(thePic, trackId, theFormat, macPath)
						set output to output & exportOutput
						
						-- This needs to be inside the check for downloaded, because
						-- albums may only store downloaded artwork with some tracks on
						-- an album
						copy theAlbum to the end of albumList
					end if
				on error errorMessage
					log "Error getting artwork for track " & trackCount & ": " & errorMessage
					set output to output & "Error getting artwork for track " & trackCount & ": " & errorMessage & linefeed
				end try
			end if
			set trackCount to trackCount + 1
		end repeat
	end tell
	return output
end exportDownloadedArtwork

on exportSingleArtwork(macPath, searchString, pid)
	set output to ""
	set linefeed to "\n"
	
	tell application "iTunes"
		-- You can't directly search for a persistent ID, so do a name search first to narrow it down
		set searchResults to (search library playlist 1 for searchString)
		set totalCount to count of searchResults
		set searchCount to 1
		repeat while searchCount <= totalCount
			set theTrack to item searchCount of searchResults
			if persistent ID of theTrack equal pid then
				try
					set theAlbum to album of theTrack as string
					set theAlbum to theAlbum & " - " & artist of theTrack as string
					set theArtwork to artwork 1 of theTrack
					set theFormat to the (format of theArtwork) as text
					log "Exporting single artwork for ID " & pid & ": " & theAlbum
					set output to output & "Exporting downloaded artwork for ID " & pid & ": " & theAlbum
					
					set thePic to the (raw data of theArtwork)
					set exportOutput to my exportArtwork(thePic, pid, theFormat, macPath)
					set output to output & exportOutput
					return output
				on error errorMessage
					log "Error getting artwork: " & errorMessage
					set output to output & "Error getting artwork: " & errorMessage & linefeed
					return output
				end try
			end if
			set searchCount to searchCount + 1
		end repeat
	end tell
	return "No results found"
end exportSingleArtwork

on exportArtwork(thePic, trackId, theFormat, macPath)
	set ext to ".png"
	set linefeed to "\n"

	if theFormat contains "JPEG" then set ext to ".jpg"
	set exportFile to macPath & trackId & ext
	set output to " -> " & exportFile & linefeed

	try
		set fp to open for access file exportFile with write permission
		write thePic to fp
		close access fp
	on error errorMessage
		log "Error: Unable to write " & exportFile & ": " & errorMessage
		set output to output & "  Error: Unable to write " & exportFile & ": " & errorMessage & linefeed
	end try
	return output
end exportArtwork

